openapi: 3.0.0
servers:
  - url: 'https://api.nexmo.com/'
info:
  version: 1.0.0
  title: API Secret Rotation API
  description: >-
    The Nexmo API Secret Rotation API enables you to create one new API Secret in addition to the existing API Secret. Following the successful use of the new API Secret, you are able to revoke the old API Secret.
security:
  - bearerAuth: []
  - basicAuth: []
paths:
  /accounts/{accountId}/secrets:
    get:
      summary: Retrieve API Secrets
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
      responses:
        '200':
          description: API secrets response
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/SecretsAll'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      summary: Create API Secret
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewApiSecret'
      responses:
        '200':
          description: API secret response
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/SecretInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /accounts/{accountId}/secrets/{secretId}:
    get:
      summary: Retrieve API Secret
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          description: ID of the API Secret
          required: true
          schema:
            type: string
      responses:
        '200':
          description: API secret response
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/SecretInfo'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      summary: Revoke API Secret
      parameters:
        - name: accountId
          in: path
          description: ID of the account
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          description: ID of the API Secret
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Revoked secret response
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Credential is missing or invalid
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - description
            properties:
              code:
                type: 'string'
                example: 'system:error:invalid-credential'
              description:
                type: string
                example: 'the credential was rejected'
    ForbiddenError:
      description: Credential cannot be added/deleted
      content:
        application/json:
          schema:
            type: object
            required:
              - code
              - description
            properties:
              code:
                type: 'string'
                example: 'system:error:forbidden-action'
              description:
                type: string
                example: 'Number of API Secrets should be > 0 and at most 2'
  schemas:
    SecretsAll:
      properties:
        _links:
          example:
          type: object
          allOf:
            - $ref: '#/components/schemas/LinkSecrets'
        _embedded:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/SecretInfo'
    SecretInfo:
      properties:
        id:
          example: "bfb562bb-bbbb-cccc-dddd-0ed7f85819d4"
          type: string
          description: >-
            Unique identifier of the credential
        created_at:
          type: string
          example: "2020-01-01T12:00:00.000Z"
          description: The time credential was created
        _links:
          example:
          type: object
          allOf:
            - $ref: '#/components/schemas/LinkSecret'
    NewApiSecret:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          example: 'client-specified API secret'
    LinkSecret:
      properties:
        self:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfSecret'
    LinkSecrets:
      properties:
        self:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfSecrets'
    SelfSecret:
      properties:
        href:
          example: "http://api.nexmo.com/accounts/acc6111f/secrets/bfb562bb-bbbb-cccc-dddd-0ed7f85819d4"
          type: string
    SelfSecrets:
      properties:
        href:
          example: "http://api.nexmo.com/accounts/acc6111f/secrets"
          type: string
          